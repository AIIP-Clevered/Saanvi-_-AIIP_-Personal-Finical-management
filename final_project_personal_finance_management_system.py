# -*- coding: utf-8 -*-
"""Final Project: Personal Finance Management System

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BxCREJlYZZIxTRdD9qlWlcDxd2zXfrYE
"""

!pip install gtts

!pip install ipywidgets matplotlib

import ipywidgets as widgets
from IPython.display import display, HTML
import matplotlib.pyplot as plt
from gtts import gTTS
from IPython.display import Audio

class PersonalFinanceApp:
  def __init__(self):
    self.create_widgets()
  def speak(self, text):
    tts = gTTS(text=text, lang='en')
    tts.save("output.mp3")
    display(Audio("output.mp3", autoplay=True))
  def create_widgets(self):
    self.logo_label = widgets.Label(value="Personal Finance Management System", style={'font_size': '50px', 'font_weight': 'bold'})
    display(self.logo_label)
    self.track_expenses_button = widgets.Button(description="Track Your Expenses", layout=widgets.Layout(width='300px'))
    self.smart_investments_button = widgets.Button(description="See Smart Investments", layout=widgets.Layout(width='300px'))
    self.money_tips_button = widgets.Button(description="See Money Tips", layout=widgets.Layout(width='300px'))
    self.track_expenses_button.on_click(self.track_expenses)
    self.smart_investments_button.on_click(self.see_smart_investments)
    self.money_tips_button.on_click(self.see_money_tips)
    display(self.track_expenses_button, self.smart_investments_button, self.money_tips_button)
  def track_expenses(self, b):
    def on_submit(expenses):
      try:
        expenses = float(expenses)
        if expenses <= 5000:
          message = "Way to go! Check out the smart investments."
        else:
          categories = {"Rent": 0.4,
                        "Utilities": 0.2,
                        "Internet and Phone": 0.1,
                        "Groceries": 0.15,
                        "Transportation": 0.1,
                        "Health": 0.05,
                        "Personal Care": 0.04,
                        "Entertainment": 0.05,
                        "Emergency Fund": 0.1,
                        "Other Savings": 0.04}
          message = "Here's your budget plan:\n\n"
          total_fixed_expenses = 0
          total_variable_expenses = 0
          total_savings = 0
          for category, percentage in categories.items():
            amount = expenses * percentage
            if category == "Emergency Fund" or category == "Other Savings":
              total_savings += amount
            else:
              if category in ["Rent", "Utilities", "Internet and Phone"]:
                total_fixed_expenses += amount
              else:
                total_variable_expenses += amount
              message += f"{category}: {amount:.2f} rupees\n"
          message += f"\nTotal Fixed Expenses: {total_fixed_expenses:.2f} rupees\n"
          message += f"Total Variable Expenses: {total_variable_expenses:.2f} rupees\n"
          message += f"Total Savings: {total_savings:.2f} rupees"
        display(HTML(f"<p>{message}</p>"))
        self.speak(message)
      except ValueError:
        error_message = "Please enter a valid numeric value for expenses."
        display(HTML("<p style='color:red;'>Please enter a valid numeric value for expenses.</p>"))
        self.speak(error_message)
    expenses_input = widgets.Text(description="Expenses ($):")
    submit_button = widgets.Button(description="Submit")
    submit_button.on_click(lambda b: on_submit(expenses_input.value))
    display(expenses_input, submit_button)

  def see_smart_investments(self, b):
    website_url = "https://www.google.com/finance/?hl=en"
    display(HTML(f'<a href="{website_url}" target="_blank">Click here to see smart investments</a>'))
    self.speak("Click here to see smart investments")

  def see_money_tips(self, b):
    def on_submit(income):
      try:
        income = float(income)
        percentage_savings = 0.20
        percentage_expenses = 0.50
        percentage_investments = 0.30

        savings_amount = income * percentage_savings
        expenses_amount = income * percentage_expenses
        investments_amount = income * percentage_investments

        message = "Here are some money management tips based on your income:\n\n"
        message += f"1. Savings: Aim to save at least ${savings_amount:.2f} per month. Consider creating an emergency fund.\n"
        message += f"2. Expenses: Keep your monthly expenses below ${expenses_amount:.2f}. Budget wisely and track your spending.\n"
        message += f"3. Investments: Allocate ${investments_amount:.2f} per month for investments. Consider diversifying your portfolio.\n"
        message += "4. Consider investing a portion of your savings in mutual funds for long-term growth.\n"
        message += "5. Keep an eye on your debt-to-income ratio. Try to minimize high-interest debt and pay off debts strategically.\n"
        message += "6. Review your financial goals regularly and adjust your budget and investment strategy accordingly.\n"
        display(HTML(f"<p>{message}</p>"))
        self.speak(message)
      except ValueError:
        error_message = "Please enter a valid numeric value for income."
        display(HTML("<p style='color:red;'>Please enter a valid numeric value for income.</p>"))
        self.speak(error_message)
    income_input = widgets.Text(description="Income ($):")
    submit_button = widgets.Button(description="Submit")
    submit_button.on_click(lambda b: on_submit(income_input.value))
    display(income_input, submit_button)

finance_app = PersonalFinanceApp()